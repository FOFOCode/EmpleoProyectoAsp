@model List<PadillaEmpleosParteFofo.Models.Graficos.InscripcionesPorOfertaViewModel>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Número de Inscripciones por Oferta</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.2/dist/chart.umd.min.js"></script>
    <style>
        body {
            background-color: #f4f7fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
            margin: 0;
            padding: 0;
        }

        .chart-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            min-height: 400px;
        }

        h2 {
            color: #333;
            font-weight: bold;
            text-align: center;
            margin-bottom: 20px;
        }

        #myChart {
            width: 100% !important;
            height: 400px !important;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="chart-container">
            <h2>Número de Inscripciones por Oferta</h2>
            <canvas id="myChart"></canvas>
        </div>
    </div>

    <script>
        const labels = @Html.Raw(Json.Serialize(Model?.Select(m => m.Oferta) ?? new string[] { }));
        const data = @Html.Raw(Json.Serialize(Model?.Select(m => m.TotalInscripciones) ?? new int[] { }));

        if (!labels || labels.length === 0 || !data || data.length === 0) {
            console.error('No hay datos para mostrar en el gráfico.');
            document.getElementById('myChart').style.display = 'none';
            const container = document.querySelector('.chart-container');
            container.innerHTML += '<p class="text-center text-danger">No hay datos disponibles para mostrar el gráfico.</p>';
        } else {
            const ctx = document.getElementById('myChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Número de Inscripciones',
                        data: data,
                        backgroundColor: 'rgba(54, 162, 235, 0.6)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 2,
                        hoverBackgroundColor: 'rgba(54, 162, 235, 0.8)'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { position: 'top', labels: { font: { size: 14 } } },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return `${context.dataset.label}: ${context.raw}`;
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: { display: true, text: 'Número de Inscripciones', font: { size: 16 } },
                            ticks: { stepSize: 1 }
                        },
                        x: {
                            title: { display: true, text: 'Ofertas de Empleo', font: { size: 16 } }
                        }
                    }
                }
            });
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
